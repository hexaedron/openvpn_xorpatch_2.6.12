# Makefile.in generated by automake 1.16.5 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  OpenVPN -- An application to securely tunnel IP networks
#             over a single UDP port, with support for SSL/TLS-based
#             session authentication and key exchange,
#             packet encryption, packet authentication, and
#             packet compression.
#
#  Copyright (C) 2002-2024 OpenVPN Inc <sales@openvpn.net>
#  Copyright (C) 2006-2012 Alon Bar-Lev <alon.barlev@gmail.com>
#



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/openvpn
pkgincludedir = $(includedir)/openvpn
pkglibdir = $(libdir)/openvpn
pkglibexecdir = $(libexecdir)/openvpn
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-freebsd14.1
host_triplet = x86_64-unknown-freebsd14.1
check_PROGRAMS = ntlm_support$(EXEEXT)
#am__append_1 = t_net.sh
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_socklen_t.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/version.m4 $(top_srcdir)/compat.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(dist_noinst_DATA) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/include/openvpn-plugin.h
CONFIG_CLEAN_FILES = t_client.sh
CONFIG_CLEAN_VPATH_FILES =
am__dirstamp = $(am__leading_dot)dirstamp
am_ntlm_support_OBJECTS = ntlm_support-ntlm_support.$(OBJEXT) \
	unit_tests/openvpn/ntlm_support-mock_msg.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-buffer.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-crypto.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-otime.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-packet_id.$(OBJEXT) \
	$(top_builddir)/src/openvpn/ntlm_support-platform.$(OBJEXT)
ntlm_support_OBJECTS = $(am_ntlm_support_OBJECTS)
ntlm_support_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
ntlm_support_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ntlm_support_CFLAGS) \
	$(CFLAGS) $(ntlm_support_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po \
	$(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po \
	./$(DEPDIR)/ntlm_support-ntlm_support.Po \
	unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(ntlm_support_SOURCES)
DIST_SOURCES = $(ntlm_support_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_noinst_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/t_client.sh.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/root/XOR/openvpn-2.6.12/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} '/root/XOR/openvpn-2.6.12/missing' autoconf
AUTOHEADER = ${SHELL} '/root/XOR/openvpn-2.6.12/missing' autoheader
AUTOMAKE = ${SHELL} '/root/XOR/openvpn-2.6.12/missing' automake-1.16
AWK = nawk
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -I/usr/local/include -std=c99
CMOCKA_CFLAGS = 
CMOCKA_LIBS = 
CPP = cc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_UNITTESTS = 
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = file
GIT = 
GREP = /usr/bin/grep
IFCONFIG = /sbin/ifconfig
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPROUTE = 
LD = /usr/bin/ld
LDFLAGS = -L/usr/local/lib
LIBCAPNG_CFLAGS = 
LIBCAPNG_LIBS = 
LIBNL_GENL_CFLAGS = 
LIBNL_GENL_LIBS = 
LIBOBJS = 
LIBPAM_CFLAGS = 
LIBPAM_LIBS = -lpam
LIBS =  -lnv
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LZ4_CFLAGS = 
LZ4_LIBS = -llz4
LZO_CFLAGS = 
LZO_LIBS = -llzo2
MAKEINFO = ${SHELL} '/root/XOR/openvpn-2.6.12/missing' makeinfo
MANIFEST_TOOL = :
MBEDTLS_CFLAGS = 
MBEDTLS_LIBS = 
MKDIR_P = ../././install-sh -c -d
NETSTAT = netstat
NM = /usr/bin/nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_CFLAGS = 
OPENSSL_LIBS = -lssl -lcrypto
OPENVPN_VERSION_MAJOR = 2
OPENVPN_VERSION_MINOR = 6
OPENVPN_VERSION_PATCH = .12
OPTIONAL_CRYPTO_CFLAGS =  
OPTIONAL_CRYPTO_LIBS =  -lssl -lcrypto
OPTIONAL_DL_LIBS = -ldl
OPTIONAL_INOTIFY_CFLAGS = 
OPTIONAL_INOTIFY_LIBS = 
OPTIONAL_LZ4_CFLAGS = 
OPTIONAL_LZ4_LIBS = -llz4
OPTIONAL_LZO_CFLAGS = 
OPTIONAL_LZO_LIBS = -llzo2
OPTIONAL_PKCS11_HELPER_CFLAGS = 
OPTIONAL_PKCS11_HELPER_LIBS = 
OPTIONAL_SELINUX_LIBS = 
OPTIONAL_SYSTEMD_LIBS = 
OTOOL = 
OTOOL64 = 
P11KIT_CFLAGS = 
P11KIT_LIBS = 
PACKAGE = openvpn
PACKAGE_BUGREPORT = openvpn-users@lists.sourceforge.net
PACKAGE_NAME = OpenVPN
PACKAGE_STRING = OpenVPN 2.6.12
PACKAGE_TARNAME = openvpn
PACKAGE_URL = 
PACKAGE_VERSION = 2.6.12
PATH_SEPARATOR = :
PKCS11_HELPER_CFLAGS = 
PKCS11_HELPER_LIBS = 
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGINDIR = 
PLUGIN_AUTH_PAM_CFLAGS = 
PLUGIN_AUTH_PAM_LIBS = -lpam
RANLIB = ranlib
RC = 
ROUTE = /sbin/route
RST2HTML = 
RST2MAN = 
SED = /usr/bin/sed
SELINUX_LIBS = 
SET_MAKE = 
SHELL = /bin/sh
SOCKETS_LIBS = 
STRIP = strip
SYSTEMD_ASK_PASSWORD = 
SYSTEMD_UNIT_DIR = 
TAP_CFLAGS = 
TAP_WIN_COMPONENT_ID = tap0901
TAP_WIN_MIN_MAJOR = 9
TAP_WIN_MIN_MINOR = 9
TEST_CFLAGS =     -I$(top_srcdir)/include 
TEST_LDFLAGS =  -lssl -lcrypto  -llzo2 
TMPFILES_DIR = 
VERSION = 2.6.12
WOLFSSL_CFLAGS = 
WOLFSSL_INCLUDEDIR = 
WOLFSSL_LIBS = 
abs_builddir = /root/XOR/openvpn-2.6.12/tests
abs_srcdir = /root/XOR/openvpn-2.6.12/tests
abs_top_builddir = /root/XOR/openvpn-2.6.12
abs_top_srcdir = /root/XOR/openvpn-2.6.12
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-freebsd14.1
build_alias = 
build_cpu = x86_64
build_os = freebsd14.1
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-freebsd14.1
host_alias = 
host_cpu = x86_64
host_os = freebsd14.1
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/XOR/openvpn-2.6.12/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libsystemd_CFLAGS = 
libsystemd_LIBS = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${libdir}/openvpn/plugins
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sampledir = $(docdir)/sample
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
systemdunitdir = 
target_alias = 
tmpfilesdir = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
MAINTAINERCLEANFILES = \
	$(srcdir)/Makefile.in

SUBDIRS = unit_tests
test_scripts = t_client.sh t_lpback.sh t_cltsrv.sh \
	$(am__append_1)
TESTS_ENVIRONMENT = top_srcdir="$(top_srcdir)"
TESTS = $(test_scripts)
dist_noinst_SCRIPTS = \
	t_cltsrv.sh \
	t_cltsrv-down.sh \
	t_lpback.sh \
	t_net.sh \
	update_t_client_ips.sh

dist_noinst_DATA = \
	t_client.rc-sample

ntlm_support_CFLAGS = -I$(top_srcdir)/src/openvpn -I$(top_srcdir)/src/compat -I$(top_srcdir)/tests/unit_tests/openvpn -DNO_CMOCKA     -I$(top_srcdir)/include 
ntlm_support_LDFLAGS =  -lssl -lcrypto  -llzo2  -L$(top_srcdir)/src/openvpn $(OPTIONAL_CRYPTO_LIBS)
ntlm_support_SOURCES = ntlm_support.c \
	unit_tests/openvpn/mock_msg.c unit_tests/openvpn/mock_msg.h \
	$(top_srcdir)/src/openvpn/buffer.c \
	$(top_srcdir)/src/openvpn/crypto.c \
	$(top_srcdir)/src/openvpn/crypto_openssl.c \
	$(top_srcdir)/src/openvpn/crypto_mbedtls.c \
	$(top_srcdir)/src/openvpn/otime.c \
	$(top_srcdir)/src/openvpn/packet_id.c \
	$(top_srcdir)/src/openvpn/platform.c

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
t_client.sh: $(top_builddir)/config.status $(srcdir)/t_client.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
unit_tests/openvpn/$(am__dirstamp):
	@$(MKDIR_P) unit_tests/openvpn
	@: > unit_tests/openvpn/$(am__dirstamp)
unit_tests/openvpn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unit_tests/openvpn/$(DEPDIR)
	@: > unit_tests/openvpn/$(DEPDIR)/$(am__dirstamp)
unit_tests/openvpn/ntlm_support-mock_msg.$(OBJEXT):  \
	unit_tests/openvpn/$(am__dirstamp) \
	unit_tests/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/openvpn
	@: > $(top_builddir)/src/openvpn/$(am__dirstamp)
$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/openvpn/$(DEPDIR)
	@: > $(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-buffer.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-crypto.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-otime.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-packet_id.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/openvpn/ntlm_support-platform.$(OBJEXT):  \
	$(top_builddir)/src/openvpn/$(am__dirstamp) \
	$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)

ntlm_support$(EXEEXT): $(ntlm_support_OBJECTS) $(ntlm_support_DEPENDENCIES) $(EXTRA_ntlm_support_DEPENDENCIES) 
	@rm -f ntlm_support$(EXEEXT)
	$(AM_V_CCLD)$(ntlm_support_LINK) $(ntlm_support_OBJECTS) $(ntlm_support_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f $(top_builddir)/src/openvpn/*.$(OBJEXT)
	-rm -f unit_tests/openvpn/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po # am--include-marker
include $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po # am--include-marker
include ./$(DEPDIR)/ntlm_support-ntlm_support.Po # am--include-marker
include unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

ntlm_support-ntlm_support.o: ntlm_support.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT ntlm_support-ntlm_support.o -MD -MP -MF $(DEPDIR)/ntlm_support-ntlm_support.Tpo -c -o ntlm_support-ntlm_support.o `test -f 'ntlm_support.c' || echo '$(srcdir)/'`ntlm_support.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ntlm_support-ntlm_support.Tpo $(DEPDIR)/ntlm_support-ntlm_support.Po
#	$(AM_V_CC)source='ntlm_support.c' object='ntlm_support-ntlm_support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o ntlm_support-ntlm_support.o `test -f 'ntlm_support.c' || echo '$(srcdir)/'`ntlm_support.c

ntlm_support-ntlm_support.obj: ntlm_support.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT ntlm_support-ntlm_support.obj -MD -MP -MF $(DEPDIR)/ntlm_support-ntlm_support.Tpo -c -o ntlm_support-ntlm_support.obj `if test -f 'ntlm_support.c'; then $(CYGPATH_W) 'ntlm_support.c'; else $(CYGPATH_W) '$(srcdir)/ntlm_support.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ntlm_support-ntlm_support.Tpo $(DEPDIR)/ntlm_support-ntlm_support.Po
#	$(AM_V_CC)source='ntlm_support.c' object='ntlm_support-ntlm_support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o ntlm_support-ntlm_support.obj `if test -f 'ntlm_support.c'; then $(CYGPATH_W) 'ntlm_support.c'; else $(CYGPATH_W) '$(srcdir)/ntlm_support.c'; fi`

unit_tests/openvpn/ntlm_support-mock_msg.o: unit_tests/openvpn/mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT unit_tests/openvpn/ntlm_support-mock_msg.o -MD -MP -MF unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Tpo -c -o unit_tests/openvpn/ntlm_support-mock_msg.o `test -f 'unit_tests/openvpn/mock_msg.c' || echo '$(srcdir)/'`unit_tests/openvpn/mock_msg.c
	$(AM_V_at)$(am__mv) unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Tpo unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po
#	$(AM_V_CC)source='unit_tests/openvpn/mock_msg.c' object='unit_tests/openvpn/ntlm_support-mock_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o unit_tests/openvpn/ntlm_support-mock_msg.o `test -f 'unit_tests/openvpn/mock_msg.c' || echo '$(srcdir)/'`unit_tests/openvpn/mock_msg.c

unit_tests/openvpn/ntlm_support-mock_msg.obj: unit_tests/openvpn/mock_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT unit_tests/openvpn/ntlm_support-mock_msg.obj -MD -MP -MF unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Tpo -c -o unit_tests/openvpn/ntlm_support-mock_msg.obj `if test -f 'unit_tests/openvpn/mock_msg.c'; then $(CYGPATH_W) 'unit_tests/openvpn/mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/unit_tests/openvpn/mock_msg.c'; fi`
	$(AM_V_at)$(am__mv) unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Tpo unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po
#	$(AM_V_CC)source='unit_tests/openvpn/mock_msg.c' object='unit_tests/openvpn/ntlm_support-mock_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o unit_tests/openvpn/ntlm_support-mock_msg.obj `if test -f 'unit_tests/openvpn/mock_msg.c'; then $(CYGPATH_W) 'unit_tests/openvpn/mock_msg.c'; else $(CYGPATH_W) '$(srcdir)/unit_tests/openvpn/mock_msg.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-buffer.o: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-buffer.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ntlm_support-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-buffer.o `test -f '$(top_builddir)/src/openvpn/buffer.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/buffer.c

$(top_builddir)/src/openvpn/ntlm_support-buffer.obj: $(top_builddir)/src/openvpn/buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-buffer.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/buffer.c' object='$(top_builddir)/src/openvpn/ntlm_support-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-buffer.obj `if test -f '$(top_builddir)/src/openvpn/buffer.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/buffer.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/buffer.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-crypto.o: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto.o `test -f '$(top_builddir)/src/openvpn/crypto.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto.c

$(top_builddir)/src/openvpn/ntlm_support-crypto.obj: $(top_builddir)/src/openvpn/crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto.obj `if test -f '$(top_builddir)/src/openvpn/crypto.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.o: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.o `test -f '$(top_builddir)/src/openvpn/crypto_openssl.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_openssl.c

$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.obj: $(top_builddir)/src/openvpn/crypto_openssl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_openssl.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_openssl.obj `if test -f '$(top_builddir)/src/openvpn/crypto_openssl.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_openssl.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_openssl.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.o: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.o `test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/crypto_mbedtls.c

$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.obj: $(top_builddir)/src/openvpn/crypto_mbedtls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/crypto_mbedtls.c' object='$(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-crypto_mbedtls.obj `if test -f '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/crypto_mbedtls.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/crypto_mbedtls.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-otime.o: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-otime.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ntlm_support-otime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-otime.o `test -f '$(top_builddir)/src/openvpn/otime.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/otime.c

$(top_builddir)/src/openvpn/ntlm_support-otime.obj: $(top_builddir)/src/openvpn/otime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-otime.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/otime.c' object='$(top_builddir)/src/openvpn/ntlm_support-otime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-otime.obj `if test -f '$(top_builddir)/src/openvpn/otime.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/otime.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/otime.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-packet_id.o: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-packet_id.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ntlm_support-packet_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-packet_id.o `test -f '$(top_builddir)/src/openvpn/packet_id.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/packet_id.c

$(top_builddir)/src/openvpn/ntlm_support-packet_id.obj: $(top_builddir)/src/openvpn/packet_id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-packet_id.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/packet_id.c' object='$(top_builddir)/src/openvpn/ntlm_support-packet_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-packet_id.obj `if test -f '$(top_builddir)/src/openvpn/packet_id.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/packet_id.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/packet_id.c'; fi`

$(top_builddir)/src/openvpn/ntlm_support-platform.o: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-platform.o -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ntlm_support-platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-platform.o `test -f '$(top_builddir)/src/openvpn/platform.c' || echo '$(srcdir)/'`$(top_builddir)/src/openvpn/platform.c

$(top_builddir)/src/openvpn/ntlm_support-platform.obj: $(top_builddir)/src/openvpn/platform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/openvpn/ntlm_support-platform.obj -MD -MP -MF $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Tpo -c -o $(top_builddir)/src/openvpn/ntlm_support-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`
	$(AM_V_at)$(am__mv) $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Tpo $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po
#	$(AM_V_CC)source='$(top_builddir)/src/openvpn/platform.c' object='$(top_builddir)/src/openvpn/ntlm_support-platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ntlm_support_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/openvpn/ntlm_support-platform.obj `if test -f '$(top_builddir)/src/openvpn/platform.c'; then $(CYGPATH_W) '$(top_builddir)/src/openvpn/platform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/openvpn/platform.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f unit_tests/openvpn/$(DEPDIR)/$(am__dirstamp)
	-rm -f unit_tests/openvpn/$(am__dirstamp)
	-test -z "$(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/openvpn/$(am__dirstamp)" || rm -f $(top_builddir)/src/openvpn/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
		-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po
	-rm -f ./$(DEPDIR)/ntlm_support-ntlm_support.Po
	-rm -f unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-buffer.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_mbedtls.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-crypto_openssl.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-otime.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-packet_id.Po
	-rm -f $(top_builddir)/src/openvpn/$(DEPDIR)/ntlm_support-platform.Po
	-rm -f ./$(DEPDIR)/ntlm_support-ntlm_support.Po
	-rm -f unit_tests/openvpn/$(DEPDIR)/ntlm_support-mock_msg.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
